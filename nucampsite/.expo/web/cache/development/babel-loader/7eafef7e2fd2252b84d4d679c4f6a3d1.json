{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ayatrashid/Desktop/NucampFolder:4-React-Native /nucampsite/components/FavoritesComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { ListItem } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { SwipeRow } from 'react-native-swipe-list-view';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { deleteFavorite as _deleteFavorite } from \"../redux/ActionCreators\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    campsites: state.campsites,\n    favorites: state.favorites\n  };\n};\n\nvar mapDispatchToProps = {\n  deleteFavorite: function deleteFavorite(campsiteId) {\n    return _deleteFavorite(campsiteId);\n  }\n};\n\nvar Favorites = function (_Component) {\n  _inherits(Favorites, _Component);\n\n  var _super = _createSuper(Favorites);\n\n  function Favorites() {\n    _classCallCheck(this, Favorites);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Favorites, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var navigate = this.props.navigation.navigate;\n\n      var renderFavoriteItem = function renderFavoriteItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(SwipeRow, {\n          rightOpenValue: -100,\n          style: styles.swipeRow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: styles.deleteView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.deleteTouchable,\n          onPress: function onPress() {\n            return Alert.alert('Delete Favorite?', 'Are you sure you wish to delete the favorite campsite ' + item.name + '?', [{\n              text: 'Cancel',\n              onPress: function onPress() {\n                return console.log(item.name + 'Not Deleted');\n              },\n              style: 'cancel'\n            }, {\n              text: 'OK',\n              onPress: function onPress() {\n                return _this.props.deleteFavorite(item.id);\n              }\n            }], {\n              cancelable: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: styles.deleteText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }\n        }, \"Delete\"))), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }\n        }, React.createElement(ListItem, {\n          title: item.name,\n          subtitle: item.description,\n          leftAvatar: {\n            source: {\n              uri: baseUrl + item.image\n            }\n          },\n          onPress: function onPress() {\n            return navigate('CampsiteInfo', {\n              campsiteId: item.id\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }\n        })));\n      };\n\n      if (this.props.campsites.isLoading) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 20\n          }\n        });\n      }\n\n      if (this.props.campsites.errMess) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }\n        }, this.props.campsites.errMess));\n      }\n\n      return React.createElement(FlatList, {\n        data: this.props.campsites.campsites.filter(function (campsite) {\n          return _this.props.favorites.includes(campsite.id);\n        }),\n        renderItem: renderFavoriteItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return Favorites;\n}(Component);\n\nFavorites.navigationOptions = {\n  title: 'My Favorites'\n};\nvar styles = StyleSheet.create({\n  deleteView: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    flex: 1\n  },\n  deleteTouchable: {\n    backgroundColor: 'red',\n    height: '100%',\n    justifyContent: 'center'\n  },\n  deleteText: {\n    color: 'white',\n    fontWeight: '700',\n    textAlign: 'center',\n    fontSize: 16,\n    width: 100\n  }\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);","map":{"version":3,"sources":["/Users/ayatrashid/Desktop/NucampFolder:4-React-Native /nucampsite/components/FavoritesComponent.js"],"names":["React","Component","ListItem","connect","Loading","baseUrl","SwipeRow","TouchableOpacity","deleteFavorite","mapStateToProps","state","campsites","favorites","mapDispatchToProps","campsiteId","Favorites","navigate","props","navigation","renderFavoriteItem","item","styles","swipeRow","deleteView","deleteTouchable","Alert","alert","name","text","onPress","console","log","style","id","cancelable","deleteText","description","source","uri","image","isLoading","errMess","filter","campsite","includes","toString","navigationOptions","title","StyleSheet","create","flexDirection","justifyContent","alignItems","flex","backgroundColor","height","color","fontWeight","textAlign","fontSize","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FlatList, View, Text, StyleSheet, Alert } from 'react-native';\nimport { ListItem } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { SwipeRow } from 'react-native-swipe-list-view';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { deleteFavorite } from '../redux/ActionCreators';\n\nconst mapStateToProps = state => {\n    return {\n        campsites: state.campsites,\n        favorites: state.favorites\n    };\n};\nconst mapDispatchToProps = {\n    deleteFavorite: campsiteId => deleteFavorite(campsiteId)\n};\n\nclass Favorites extends Component {\n\n    static navigationOptions = {\n        title: 'My Favorites'\n    }\n\n    render() {\n        const { navigate } = this.props.navigation;\n        const renderFavoriteItem = ({item}) => {\n            return (\n                <SwipeRow rightOpenValue={-100} style={styles.swipeRow}>\n                    <View style={styles.deleteView}>\n                    <TouchableOpacity\n                            style={styles.deleteTouchable}\n                            onPress={() =>\n                                Alert.alert(\n                                    'Delete Favorite?',\n                                    'Are you sure you wish to delete the favorite campsite ' +\n                                        item.name +\n                                        '?',\n                                    [\n                                        {\n                                            text: 'Cancel',\n                                            onPress: () => console.log(item.name + 'Not Deleted'),\n                                            style: 'cancel'\n                                        },\n                                        {\n                                            text: 'OK',\n                                            onPress: () => this.props.deleteFavorite(item.id)\n                                        },\n                                    ],\n                                    { cancelable: false }\n                                )\n                            }\n                        > \n                        <Text style={styles.deleteText}>Delete</Text>\n                        </TouchableOpacity>\n                    </View>\n\n                    <View>\n                        <ListItem\n                            title={item.name}\n                            subtitle={item.description}\n                            leftAvatar={{source: {uri: baseUrl + item.image}}}\n                            onPress={() => navigate('CampsiteInfo', {campsiteId: item.id})}\n                        />\n                    </View>\n                </SwipeRow>\n            );\n        };\n\n        if (this.props.campsites.isLoading) {\n            return <Loading />;\n        }\n        if (this.props.campsites.errMess) {\n            return (\n                <View>\n                    <Text>{this.props.campsites.errMess}</Text>\n                </View>\n            );\n        }\n        return (\n            <FlatList\n                data={this.props.campsites.campsites.filter(\n                    campsite => this.props.favorites.includes(campsite.id)\n                )}\n                renderItem={renderFavoriteItem}\n                keyExtractor={item => item.id.toString()}\n            />\n        );\n    }\n}\n\n\nconst styles = StyleSheet.create({\n    deleteView: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        flex: 1\n    },\n    deleteTouchable: {\n        backgroundColor: 'red',\n        height: '100%',\n        justifyContent: 'center'\n    },\n    deleteText: {\n        color: 'white',\n        fontWeight: '700',\n        textAlign: 'center',\n        fontSize: 16,\n        width: 100\n    }\n});\n\nexport default connect(mapStateToProps,  mapDispatchToProps)(Favorites);"]},"metadata":{},"sourceType":"module"}