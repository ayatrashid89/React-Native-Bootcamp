{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ayatrashid/Desktop/Nucamp/NucampFolder:4-React-Native /nucampsite/components/MainComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Directory from \"./DirectoryComponent\";\nimport Home from \"./HomeComponent\";\nimport About from \"./AboutComponents\";\nimport Contact from \"./ContactComponents\";\nimport CampsiteInfo from \"./CampsiteInfoComponent\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createAppContainer } from 'react-navigation';\nimport { createDrawerNavigator } from 'react-navigation-drawer';\nimport { Icon } from 'react-native-elements';\nvar DirectoryNavigator = createStackNavigator({\n  Directory: {\n    screen: Directory,\n    navigationOptions: function navigationOptions(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        headerLeft: React.createElement(Icon, {\n          name: \"list\",\n          type: \"font-awesome\",\n          iconStyle: styles.stackIcon,\n          onPress: function onPress() {\n            return navigation.toggleDrawer();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }\n        })\n      };\n    }\n  },\n  CampsiteInfo: {\n    screen: CampsiteInfo\n  }\n}, {\n  initialRouteName: 'Directory',\n  defaultNavigationOptions: {\n    headerStyle: {\n      backgroundColor: '#5637DD'\n    },\n    headerTintColor: '#fff',\n    headerTitleStyle: {\n      color: '#fff'\n    }\n  }\n});\nvar HomeNavigator = createStackNavigator({\n  Home: {\n    screen: Home\n  }\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref2) {\n    var navigation = _ref2.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: '#5637DD'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      },\n      headerLeft: React.createElement(Icon, {\n        name: \"home\",\n        type: \"font-awesome\",\n        iconStyle: styles.stackIcon,\n        onPress: function onPress() {\n          return navigation.toggleDrawer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      })\n    };\n  }\n});\nvar AboutNavigator = createStackNavigator({\n  About: {\n    screen: About\n  }\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref3) {\n    var navigation = _ref3.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: '#5637DD'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      },\n      headerLeft: React.createElement(Icon, {\n        name: \"info-circle\",\n        type: \"font-awesome\",\n        iconStyle: styles.stackIcon,\n        onPress: function onPress() {\n          return navigation.toggleDrawer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      })\n    };\n  }\n});\nvar ContactNavigator = createStackNavigator({\n  Contact: {\n    screen: Contact\n  }\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref4) {\n    var navigation = _ref4.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: '#5637DD'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      },\n      headerLeft: React.createElement(Icon, {\n        name: \"address-card\",\n        type: \"font-awesome\",\n        iconStyle: styles.stackIcon,\n        onPress: function onPress() {\n          return navigation.toggleDrawer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      })\n    };\n  }\n});\nvar MainNavigator = createDrawerNavigator({\n  Home: {\n    screen: HomeNavigator\n  },\n  Directory: {\n    screen: DirectoryNavigator\n  },\n  About: {\n    screen: AboutNavigator\n  },\n  Contact: {\n    screen: ContactNavigator\n  }\n}, {\n  drawerBackgroundColor: '#CEC8FF'\n});\nvar AppNavigator = createAppContainer(MainNavigator);\n\nvar Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingTop: Platform.OS === 'ios' ? 0 : Expo.Constants.statusBarHeight\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, React.createElement(AppNavigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar styles = StyleSheet.create({\n  stackIcon: {\n    marginLeft: 10,\n    color: '#fff',\n    fontSize: 24\n  }\n});\nexport default Main;","map":{"version":3,"sources":["/Users/ayatrashid/Desktop/Nucamp/NucampFolder:4-React-Native /nucampsite/components/MainComponent.js"],"names":["React","Component","Directory","Home","About","Contact","CampsiteInfo","createStackNavigator","createAppContainer","createDrawerNavigator","Icon","DirectoryNavigator","screen","navigationOptions","navigation","headerLeft","styles","stackIcon","toggleDrawer","initialRouteName","defaultNavigationOptions","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","color","HomeNavigator","AboutNavigator","ContactNavigator","MainNavigator","drawerBackgroundColor","AppNavigator","Main","flex","paddingTop","Platform","OS","Expo","Constants","statusBarHeight","StyleSheet","create","marginLeft","fontSize"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;AACA,OAAOC,YAAP;;;;AAEA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,IAAT,QAAqB,uBAArB;AAEA,IAAMC,kBAAkB,GAAGJ,oBAAoB,CAC3C;AACIL,EAAAA,SAAS,EAAE;AACPU,IAAAA,MAAM,EAAEV,SADD;AAEPW,IAAAA,iBAAiB,EAAE;AAAA,UAAEC,UAAF,QAAEA,UAAF;AAAA,aAAmB;AAClCC,QAAAA,UAAU,EAAE,oBAAC,IAAD;AACR,UAAA,IAAI,EAAC,MADG;AAER,UAAA,IAAI,EAAC,cAFG;AAGR,UAAA,SAAS,EAAEC,MAAM,CAACC,SAHV;AAIR,UAAA,OAAO,EAAE;AAAA,mBAAMH,UAAU,CAACI,YAAX,EAAN;AAAA,WAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADsB,OAAnB;AAAA;AAFZ,GADf;AAYIZ,EAAAA,YAAY,EAAE;AAAEM,IAAAA,MAAM,EAAEN;AAAV;AAZlB,CAD2C,EAgB3C;AACIa,EAAAA,gBAAgB,EAAE,WADtB;AAGIC,EAAAA,wBAAwB,EAAE;AACtBC,IAAAA,WAAW,EAAE;AACTC,MAAAA,eAAe,EAAE;AADR,KADS;AAItBC,IAAAA,eAAe,EAAE,MAJK;AAKtBC,IAAAA,gBAAgB,EAAE;AACdC,MAAAA,KAAK,EAAE;AADO;AALI;AAH9B,CAhB2C,CAA/C;AA8BA,IAAMC,aAAa,GAAGnB,oBAAoB,CACtC;AACIJ,EAAAA,IAAI,EAAE;AAAES,IAAAA,MAAM,EAAET;AAAV;AADV,CADsC,EAItC;AACIiB,EAAAA,wBAAwB,EAAE;AAAA,QAAEN,UAAF,SAAEA,UAAF;AAAA,WAAmB;AACzCO,MAAAA,WAAW,EAAE;AACTC,QAAAA,eAAe,EAAE;AADR,OAD4B;AAIzCC,MAAAA,eAAe,EAAE,MAJwB;AAKzCC,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,KAAK,EAAE;AADO,OALuB;AAQzCV,MAAAA,UAAU,EAAE,oBAAC,IAAD;AACR,QAAA,IAAI,EAAC,MADG;AAER,QAAA,IAAI,EAAC,cAFG;AAGR,QAAA,SAAS,EAAEC,MAAM,CAACC,SAHV;AAIR,QAAA,OAAO,EAAE;AAAA,iBAAMH,UAAU,CAACI,YAAX,EAAN;AAAA,SAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAR6B,KAAnB;AAAA;AAD9B,CAJsC,CAA1C;AAuBA,IAAMS,cAAc,GAAGpB,oBAAoB,CACvC;AACIH,EAAAA,KAAK,EAAE;AAAEQ,IAAAA,MAAM,EAAER;AAAV;AADX,CADuC,EAIvC;AACIgB,EAAAA,wBAAwB,EAAE;AAAA,QAAEN,UAAF,SAAEA,UAAF;AAAA,WAAmB;AACzCO,MAAAA,WAAW,EAAE;AACTC,QAAAA,eAAe,EAAE;AADR,OAD4B;AAIzCC,MAAAA,eAAe,EAAE,MAJwB;AAKzCC,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,KAAK,EAAE;AADO,OALuB;AAQzCV,MAAAA,UAAU,EAAE,oBAAC,IAAD;AACR,QAAA,IAAI,EAAC,aADG;AAER,QAAA,IAAI,EAAC,cAFG;AAGR,QAAA,SAAS,EAAEC,MAAM,CAACC,SAHV;AAIR,QAAA,OAAO,EAAE;AAAA,iBAAMH,UAAU,CAACI,YAAX,EAAN;AAAA,SAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAR6B,KAAnB;AAAA;AAD9B,CAJuC,CAA3C;AAsBA,IAAMU,gBAAgB,GAAGrB,oBAAoB,CACzC;AACIF,EAAAA,OAAO,EAAE;AAAEO,IAAAA,MAAM,EAAEP;AAAV;AADb,CADyC,EAIzC;AACIe,EAAAA,wBAAwB,EAAE;AAAA,QAAEN,UAAF,SAAEA,UAAF;AAAA,WAAmB;AACzCO,MAAAA,WAAW,EAAE;AACTC,QAAAA,eAAe,EAAE;AADR,OAD4B;AAIzCC,MAAAA,eAAe,EAAE,MAJwB;AAKzCC,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,KAAK,EAAE;AADO,OALuB;AAQzCV,MAAAA,UAAU,EAAE,oBAAC,IAAD;AACR,QAAA,IAAI,EAAC,cADG;AAER,QAAA,IAAI,EAAC,cAFG;AAGR,QAAA,SAAS,EAAEC,MAAM,CAACC,SAHV;AAIR,QAAA,OAAO,EAAE;AAAA,iBAAMH,UAAU,CAACI,YAAX,EAAN;AAAA,SAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAR6B,KAAnB;AAAA;AAD9B,CAJyC,CAA7C;AAuBA,IAAMW,aAAa,GAAGpB,qBAAqB,CACvC;AACIN,EAAAA,IAAI,EAAE;AAAES,IAAAA,MAAM,EAAEc;AAAV,GADV;AAEIxB,EAAAA,SAAS,EAAE;AAAEU,IAAAA,MAAM,EAAED;AAAV,GAFf;AAGIP,EAAAA,KAAK,EAAE;AAAEQ,IAAAA,MAAM,EAAEe;AAAV,GAHX;AAIItB,EAAAA,OAAO,EAAE;AAAEO,IAAAA,MAAM,EAAEgB;AAAV;AAJb,CADuC,EAOvC;AACIE,EAAAA,qBAAqB,EAAE;AAD3B,CAPuC,CAA3C;AAYA,IAAMC,YAAY,GAAGvB,kBAAkB,CAACqB,aAAD,CAAvC;;IAEUG,I;;;;;;;;;;;;;6BACG;AACD,aACI,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE,CADH;AAEHC,UAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,CAAxB,GAA4BC,IAAI,CAACC,SAAL,CAAeC;AAFpD,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ;AASH;;;;EAXctC,S;;AAaH,IAAMe,MAAM,GAAGwB,UAAU,CAACC,MAAX,CAAkB;AAC7BxB,EAAAA,SAAS,EAAE;AACPyB,IAAAA,UAAU,EAAE,EADL;AAEPjB,IAAAA,KAAK,EAAE,MAFA;AAGPkB,IAAAA,QAAQ,EAAE;AAHH;AADkB,CAAlB,CAAf;AAOpB,eAAeX,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport Directory from './DirectoryComponent';\nimport Home from './HomeComponent';\nimport About from './AboutComponents';\nimport Contact from './ContactComponents';\nimport CampsiteInfo from './CampsiteInfoComponent';\nimport { View, Platform, StyleSheet } from 'react-native';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createAppContainer } from 'react-navigation';\nimport { createDrawerNavigator } from 'react-navigation-drawer';\nimport { Icon } from 'react-native-elements';\n\nconst DirectoryNavigator = createStackNavigator(\n    {\n        Directory: { \n            screen: Directory,\n            navigationOptions: ({navigation}) => ({\n                headerLeft: <Icon\n                    name='list'\n                    type='font-awesome'\n                    iconStyle={styles.stackIcon}\n                    onPress={() => navigation.toggleDrawer()}\n                />\n            })\n        },\n        CampsiteInfo: { screen: CampsiteInfo }\n    }, \n    \n    {\n        initialRouteName: 'Directory',\n\n        defaultNavigationOptions: {\n            headerStyle: {\n                backgroundColor: '#5637DD'\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                color: '#fff'\n            }\n        }\n    }\n);\nconst HomeNavigator = createStackNavigator(\n    {\n        Home: { screen: Home }\n    },\n    {\n        defaultNavigationOptions: ({navigation}) => ({\n            headerStyle: {\n                backgroundColor: '#5637DD'\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                color: '#fff'\n            },\n            headerLeft: <Icon\n                name='home'\n                type='font-awesome'\n                iconStyle={styles.stackIcon}\n                onPress={() => navigation.toggleDrawer()}\n            />\n        })\n    }\n);\n\nconst AboutNavigator = createStackNavigator(\n    {\n        About: { screen: About }\n    },\n    {\n        defaultNavigationOptions: ({navigation}) => ({\n            headerStyle: {\n                backgroundColor: '#5637DD'\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                color: '#fff'\n            },\n            headerLeft: <Icon\n                name='info-circle'\n                type='font-awesome'\n                iconStyle={styles.stackIcon}\n                onPress={() => navigation.toggleDrawer()}\n            />\n        })\n    }\n);\nconst ContactNavigator = createStackNavigator(\n    {\n        Contact: { screen: Contact }\n    },\n    {\n        defaultNavigationOptions: ({navigation}) => ({\n            headerStyle: {\n                backgroundColor: '#5637DD'\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                color: '#fff'\n            },\n            headerLeft: <Icon\n                name='address-card'\n                type='font-awesome'\n                iconStyle={styles.stackIcon}\n                onPress={() => navigation.toggleDrawer()}\n            />\n        })\n    }\n);\n\nconst MainNavigator = createDrawerNavigator(\n    {\n        Home: { screen: HomeNavigator },\n        Directory: { screen: DirectoryNavigator },\n        About: { screen: AboutNavigator},\n        Contact: { screen: ContactNavigator  }\n    },\n    {\n        drawerBackgroundColor: '#CEC8FF'\n    }\n);\n\nconst AppNavigator = createAppContainer(MainNavigator );\n\n    class Main extends Component {\n    render() {\n            return (\n                <View\n                    style={{\n                        flex: 1,\n                        paddingTop: Platform.OS === 'ios' ? 0 : Expo.Constants.statusBarHeight\n                }}>\n                    <AppNavigator />\n                </View>\n            );\n        }\n }\n                    const styles = StyleSheet.create({\n                        stackIcon: {\n                            marginLeft: 10,\n                            color: '#fff',\n                            fontSize: 24\n                        }\n                    });\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}