{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ayatrashid/Desktop/Nucamp/NucampFolder:4-React-Native /nucampsite/components/CampsiteInfoComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Card, Icon } from 'react-native-elements';\nimport { CAMPSITES } from \"../shared/campsites\";\nimport { COMMENTS } from \"../shared/comments\";\n\nfunction RenderCampsite(props) {\n  var campsite = props.campsite;\n\n  if (campsite) {\n    return React.createElement(Card, {\n      featuredTitle: campsite.name,\n      image: require(\"./images/react-lake.jpg\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, campsite.description), React.createElement(Icon, {\n      name: props.favorite ? 'heart' : 'heart-o',\n      type: \"font-awesome\",\n      color: \"#f50\",\n      raised: true,\n      reverse: true,\n      onPress: function onPress() {\n        return props.favorite ? console.log('Already set as a favorite') : props.markFavorite();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  });\n}\n\nvar CampsiteInfo = function (_Component) {\n  _inherits(CampsiteInfo, _Component);\n\n  var _super = _createSuper(CampsiteInfo);\n\n  function CampsiteInfo(props) {\n    var _this;\n\n    _classCallCheck(this, CampsiteInfo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      campsites: CAMPSITES,\n      comments: COMMENTS,\n      favorite: false\n    };\n    return _this;\n  }\n\n  _createClass(CampsiteInfo, [{\n    key: \"markFavorite\",\n    value: function markFavorite() {\n      this.setState({\n        favorite: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var campsiteId = this.props.navigation.getParam('campsiteId');\n      var campsite = this.state.campsites.filter(function (campsite) {\n        return campsite.id === campsiteId;\n      })[0];\n      var comments = this.state.comments.filter(function (comments) {\n        return comments.id === campsiteId;\n      });\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, React.createElement(RenderCampsite, {\n        campsite: campsite,\n        favorite: this.state.favorite,\n        markFavorite: function markFavorite() {\n          return _this2.markFavorite();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 16\n        }\n      }), React.createElement(RenderComments, {\n        comments: comments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return CampsiteInfo;\n}(Component);\n\nCampsiteInfo.navigationOptions = {\n  title: 'Campsite Information'\n};\nexport default CampsiteInfo;","map":{"version":3,"sources":["/Users/ayatrashid/Desktop/Nucamp/NucampFolder:4-React-Native /nucampsite/components/CampsiteInfoComponent.js"],"names":["React","Component","Card","Icon","CAMPSITES","COMMENTS","RenderCampsite","props","campsite","name","require","margin","description","favorite","console","log","markFavorite","CampsiteInfo","state","campsites","comments","setState","campsiteId","navigation","getParam","filter","id","navigationOptions","title"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAASC,IAAT,EAAeC,IAAf,QAA2B,uBAA3B;AACA,SAASC,SAAT;AACA,SAASC,QAAT;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA,MAEpBC,QAFoB,GAERD,KAFQ,CAEpBC,QAFoB;;AAG3B,MAAIA,QAAJ,EAAc;AACV,WACI,oBAAC,IAAD;AACI,MAAA,aAAa,EAAEA,QAAQ,CAACC,IAD5B;AAEI,MAAA,KAAK,EAAEC,OAAO,2BAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,QAAQ,CAACI,WADd,CAJJ,EAOI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAEL,KAAK,CAACM,QAAN,GAAiB,OAAjB,GAA2B,SADrC;AAEI,MAAA,IAAI,EAAC,cAFT;AAGI,MAAA,KAAK,EAAC,MAHV;AAII,MAAA,MAAM,MAJV;AAKI,MAAA,OAAO,MALX;AAMI,MAAA,OAAO,EAAE;AAAA,eAAMN,KAAK,CAACM,QAAN,GACXC,OAAO,CAACC,GAAR,CAAY,2BAAZ,CADW,GACgCR,KAAK,CAACS,YAAN,EADtC;AAAA,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ;AAmBH;;AACD,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH;;IA2BKC,Y;;;;;AAEF,wBAAYV,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKW,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAEf,SADF;AAETgB,MAAAA,QAAQ,EAAEf,QAFD;AAGTQ,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAFe;AAOlB;;;;mCAEc;AACX,WAAKQ,QAAL,CAAc;AAACR,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACH;;;6BAMQ;AAAA;;AACL,UAAMS,UAAU,GAAG,KAAKf,KAAL,CAAWgB,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B,CAAnB;AACA,UAAMhB,QAAQ,GAAG,KAAKU,KAAL,CAAWC,SAAX,CAAqBM,MAArB,CAA4B,UAAAjB,QAAQ;AAAA,eAAIA,QAAQ,CAACkB,EAAT,KAAgBJ,UAApB;AAAA,OAApC,EAAoE,CAApE,CAAjB;AACA,UAAMF,QAAQ,GAAE,KAAKF,KAAL,CAAWE,QAAX,CAAoBK,MAApB,CAA2B,UAAAL,QAAQ;AAAA,eAAIA,QAAQ,CAACM,EAAT,KAAgBJ,UAApB;AAAA,OAAnC,CAAhB;AACA,aACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAEd,QAA1B;AACK,QAAA,QAAQ,EAAE,KAAKU,KAAL,CAAWL,QAD1B;AAEK,QAAA,YAAY,EAAE;AAAA,iBAAM,MAAI,CAACG,YAAL,EAAN;AAAA,SAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAKI,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAEI,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ;AAUH;;;;EAjCsBnB,S;;AAArBgB,Y,CAeKU,iB,GAAoB;AACvBC,EAAAA,KAAK,EAAE;AADgB,C;AAqB/B,eAAeX,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Text, View, ScrollView, FlatList } from 'react-native';\nimport { Card, Icon } from 'react-native-elements';\nimport { CAMPSITES } from '../shared/campsites';\nimport { COMMENTS } from '../shared/comments';\n\n\nfunction RenderCampsite(props) {\n\n    const {campsite} = props;\n    if (campsite) {\n        return (\n            <Card\n                featuredTitle={campsite.name}\n                image={require('./images/react-lake.jpg')}\n            >\n                <Text style={{margin: 10}}>\n                    {campsite.description}\n                </Text>\n                <Icon\n                    name={props.favorite ? 'heart' : 'heart-o'}\n                    type='font-awesome'\n                    color='#f50'\n                    raised\n                    reverse\n                    onPress={() => props.favorite ? \n                        console.log('Already set as a favorite') : props.markFavorite()}\n                />\n            </Card>\n        );\n    }\n    return <View />;\n}\n\n\n// function RenderComments({comments}){\n\n//     const renderCommentItem = ({item}) => {\n//         return (\n//             <View style={{margin: 10}}>\n//                 <Text style={{fontSize: 14}}>{item.text}</Text>\n//                 <Text style={{fontSize: 12}}>{item.rating} Stars</Text>\n//                 <Text style={{fontSize: 12}}>{`-- ${item.author}, ${item.date}`}</Text>\n//             </View>\n//         );\n//     };\n\n//     return (\n//         <Card title='Comments'>\n//             <FlatList\n//                 data={comments}\n//                 renderItem={renderCommentItem}\n//                 keyExtractor={item => item.id.toString()}\n//             />\n//         </Card>\n//     );\n// }\n\n\nclass CampsiteInfo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            campsites: CAMPSITES,\n            comments: COMMENTS,\n            favorite: false\n        };\n    }\n\n    markFavorite() {\n        this.setState({favorite: true});\n    }\n\n    static navigationOptions = {\n        title: 'Campsite Information'\n    }\n\n    render() {\n        const campsiteId = this.props.navigation.getParam('campsiteId');\n        const campsite = this.state.campsites.filter(campsite => campsite.id === campsiteId)[0];\n        const comments= this.state.comments.filter(comments => comments.id === campsiteId)\n        return(\n            <ScrollView>\n               <RenderCampsite campsite={campsite}\n                    favorite={this.state.favorite}\n                    markFavorite={() => this.markFavorite()}\n                />\n                <RenderComments comments={comments} />\n            </ScrollView>\n        );\n\n    }\n}\n\nexport default CampsiteInfo;"]},"metadata":{},"sourceType":"module"}